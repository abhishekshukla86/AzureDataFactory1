{
	"name": "CustomerSalesData",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "JoinDataSetfromDataLake",
						"type": "DatasetReference"
					},
					"name": "JoinDataSourceSales"
				},
				{
					"dataset": {
						"referenceName": "CustomerDataSetfromStorage",
						"type": "DatasetReference"
					},
					"name": "JoinDataSourceCustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "CusotmerSalesJoinDataSink"
				}
			],
			"transformations": [
				{
					"name": "JoinSalesandCustomerData"
				}
			],
			"script": "source(output(\n\t\tInvoiceNo as integer,\n\t\tStockCode as string,\n\t\tDescription as string,\n\t\tQuantity as integer,\n\t\tInvoiceDate as date,\n\t\tUnitPrice as float,\n\t\tCustomerID as integer,\n\t\tCountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> JoinDataSourceSales\nsource(output(\n\t\tCID as integer,\n\t\tName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> JoinDataSourceCustomer\nJoinDataSourceSales, JoinDataSourceCustomer join(CustomerID == CID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinSalesandCustomerData\nJoinSalesandCustomerData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> CusotmerSalesJoinDataSink"
		}
	}
}